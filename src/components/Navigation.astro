---
const pathname = new URL(Astro.request.url).pathname;
---

<nav id="main-navigation">
	<ul role="list">
		<li>
			<a href="/" aria-current={pathname === '/' ? 'page' : undefined}>Home</a>
		</li>

		<li>
			<a href="/nutrition-and-health-coaching" aria-current={pathname === '/nutrition-and-health-coaching' ? 'page' : undefined}>Coaching</a>
		</li>
		
		<li>
			<a href="/about-us" aria-current={pathname === '/about-us' ? 'page' : undefined}
>About</a>
		</li>

		<li>
			<a href="/lindas-story" aria-current={pathname === 'lindas-story' ? 'page' : undefined}
>Lindaâ€™s Story</a>
		</li>

		<li>
			<a href="/seaside-awakenings" aria-current={pathname === '/seaside-awakenings' ? 'page' : undefined}>The Book</a>
		</li>

		

		<li>
			<a href="/testimonials" aria-current={pathname === '/testimonials' ? 'page' : undefined}>Testimonials</a>
		</li>

		<li>
			<a href="/contact" aria-current={pathname === '/contact' ? 'page' : undefined}>Contact</a>
		</li>

		<!-- <li>
			<a href="/facebook" aria-current={new URL(Astro.request.url).pathname === '/facebook' ? 'page' : undefined}>Facebook</a>
		</li> -->
	</ul>
</nav>

<script>
	// variables
	const mainNav = document.querySelector('#main-navigation');
	const mainMenu = mainNav.querySelector('ul');

	// execution
	mainMenu &&
		mainMenu.addEventListener('keydown', (event) => {
			const currentMenuItem = event.target.closest('li');
			const menuItems = [...mainMenu.querySelectorAll('li')];
			const index = menuItems.findIndex((item) => item === currentMenuItem);

			const key = event.key;
			let targetItem;

			// move right on arrow right
			if (key === 'ArrowRight') {
				// if it's the last item, go the first, else go to next
				if (menuItems.indexOf(currentMenuItem) === menuItems.length - 1) {
					targetItem = menuItems[0];
				} else {
					targetItem = menuItems[index + 1];
				}
			}

			// move left on arrow left
			if (key === 'ArrowLeft') {
				// if it's the first item, go the last, else go to next
				if (menuItems.indexOf(currentMenuItem) === 0) {
					targetItem = menuItems[menuItems.length - 1];
				} else {
					targetItem = menuItems[index - 1];
				}
			}

			// escape to go back to first item
			if (key === 'Escape') {
				targetItem = menuItems[0];
			}

			// set focus on target item
			if (targetItem) {
				targetItem.querySelector('a, button, input').focus();
			}
		});
</script>

<style>
	@custom-media --viewport-md (width >= 62rem);

	nav {
		display: none;
		flex-basis: 100%;
	}

	@media (--viewport-md) {
		nav {
			display: block;
			flex-basis: auto;
		}
	}

	nav.show {
		display: block;
	}
	nav > ul {
		display: flex;
		flex-direction: column;
	}

	@media (--viewport-md) {
		nav > ul {
			flex-direction: row;
		}
	}

	nav a {
		color: var(--color-lite);
		text-decoration: none;
		padding: 0.5rem 0.75rem;
		display: block;
		&:hover,
		&:focus {
			color: var(--color-primary-lite);
		}
	}

	nav a[aria-current] {
		text-decoration: underline;
		text-decoration-thickness: var(--border-thin);
		color: var(--color-white);
		text-underline-offset: 0.2em;
	}
</style>
